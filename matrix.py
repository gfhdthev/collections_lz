from scipy.special import bernoulli #библиотека для ряда Бернулли
import numpy as np

#размеры всех матриц
N = 5
M = 5

#первая матрица
A = []

for i in range(N):
    A.append([0]*M) #создаем 25 элементов матрицы равных нулю

for i in range(N): 
    for j in range(M): #двойной цикл, чтобы перебрать все элементы матрицы
        if i == j:
            A[i][j] = 1 #если число лежит на главной диагонали, то оно равно 1, т.к. матрица единичная

k = 0 #переменная для перебора ряда Фибоначчи в будующем
s1 = 0
s2 = 1
fibo = [0, 1] #ряд Фибоначчи с первыми двумя элеметами

for i in range(1, 24): #создаем список, в котом будет храниться ряд Фибоначчи

    if i%2 == 0: #если i четное, то мы обноляем s1
        s1 = s1+s2
    elif i%2 == 1: #если i нечетное, то мы обноляем s2(чередуем после каждого числа)
        s2 = s1+s2

    fibo.append(s1+s2) #добавляем каждый новый жлемент в список

for i in range(N):
    for j in range(M):
        A[i][j] += fibo[k] #добавляеем к каждому элементу матрицы соответствующее число ряда Фибоначчи
        k += 1 #увеличиваем на 1, чтобы всегда брать новый элеметр ряда Фибоначчи

#вторая матрицы
B = []

for i in range(N):
    B.append([0]*M) #создаем 25 элементов матрицы равных нулю

for i in range(N): 
    for j in range(M): #двойной цикл, чтобы перебрать все желементы матрицы
        if i == j:
            B[i][j] = 1 #если число лежит на главной диагонали, то оно равно 1, т.к. матрица единичная

k = 0 #обнуляем переменную, чтобы использовать ее для ряда Бернулли
n = 25 #задаем количество элементов для ряда Бернулли
bern = [] #создаем пустой список для ряда Бернулли

bernoulli_numbers = bernoulli(n) #с помощью библиотеки находим первые 25 чисел ряда Бернулли

for i in range(n):
    bern.append(float(bernoulli_numbers[i])) #добавляем эти числа в ранее созданный список

for i in range(N):
    for j in range(M):
        B[i][j] += bern[k] #добавляеем к каждому элементу матрицы соответствующее число ряда Бернулли
        k += 1 #увеличиваем на 1, чтобы всегда брать новый элемент ряда Бернулли

#третья матрица, данная в условии
third = [10, 72, 80, 62, 34, 37, 10, 55, 90, 26, 45, 41, 15, 14, 44, 15, 8, 1, 23, 28, 67, 39, 89, 4, 23] #
C = []
k = 0 #обнуляем, чтобы добавлять third в третью матрицу

for i in range(N):
    C.append([0]*M) #создаем 25 элементов матрицы равных нулю

for i in range(N):
    for j in range(M):
        C[i][j] = third[k] #приравнивам соответствующий элемент матрицы к элементу списка third
        k += 1

#умножение первой и второй матрицы
D = [] 

for i in range(N):
    D.append([0]*M) #создаем 25 элементов матрицы равных нулю

for i in range(N):
    for j in range(M):
        D[i][j] = A[i][j] * B[i][j]

#сравнение матриц

arr = np.allclose(C, D, atol=1e-8)

if arr == 'True':
    print('Матрицы равны')

else:
    print('Матрицы не равны')